!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Automato	automato.py	/^class Automato:$/;"	kind:class	line:22
Converte	main.py	/^class Converte(self):$/;"	kind:class	line:31
Image	Trabalho_2.py	/^from PIL import ImageTk, Image$/;"	kind:namespace	line:13
Image	main.py	/^from PIL import ImageTk, Image$/;"	kind:namespace	line:13
ImageTk	Trabalho_2.py	/^from PIL import ImageTk, Image$/;"	kind:namespace	line:13
ImageTk	main.py	/^from PIL import ImageTk, Image$/;"	kind:namespace	line:13
Janela	Trabalho_2.py	/^Janela = tk.Tk()  # instancia da Janela Principal (mainWindow)$/;"	kind:variable	line:30
Janela	main.py	/^Janela = tk.Tk()  # instancia da Janela Principal (mainWindow)$/;"	kind:variable	line:77
PIL	Trabalho_2.py	/^import PIL$/;"	kind:namespace	line:12
PIL	automato.py	/^import PIL$/;"	kind:namespace	line:11
PIL	main.py	/^import PIL$/;"	kind:namespace	line:12
PhotoImage	Trabalho_2.py	/^from tkinter import PhotoImage$/;"	kind:namespace	line:14
PhotoImage	main.py	/^from tkinter import PhotoImage$/;"	kind:namespace	line:14
Trabalho_2.py	Trabalho_2.py	1;"	kind:file	line:1
__init__	automato.py	/^    def __init__(self):$/;"	kind:member	line:24
automato.py	automato.py	1;"	kind:file	line:1
base	main.py	/^    def base(simbolo):$/;"	kind:member	line:42
btn	Trabalho_2.py	/^btn = Button(frame5, text="Converter em AFN-e", font=fonte1, command='main.Converte')# chamar classe principal$/;"	kind:variable	line:66
btn	main.py	/^btn = Button(frame5, text="Converter", font=fonte1, command=expPosfixa)$/;"	kind:variable	line:115
concatenacao	main.py	/^    def concatenacao(simboloA, simboloB):$/;"	kind:member	line:56
ed1	Trabalho_2.py	/^ed1 = Entry(frame5, text="", font=fonte2)# inserir texto sugestivo$/;"	kind:variable	line:65
ed1	main.py	/^ed1 = Entry(frame5, text="", font=fonte2)$/;"	kind:variable	line:113
ed2	main.py	/^ed2 = Entry(frame5, text="", font=fonte2)$/;"	kind:variable	line:114
fechoKleene	main.py	/^    def fechoKleene(simbolo):$/;"	kind:member	line:63
font	Trabalho_2.py	/^            font=('Monaco', '12', 'bold'), height=6)$/;"	kind:variable	line:60
fonte1	Trabalho_2.py	/^fonte1 = ('Monaco', '10')$/;"	kind:variable	line:56
fonte1	main.py	/^fonte1 = ('Monaco', '10')$/;"	kind:variable	line:103
fonte2	Trabalho_2.py	/^fonte2 = ('Monaco', '16')$/;"	kind:variable	line:57
fonte2	main.py	/^fonte2 = ('Monaco', '16')$/;"	kind:variable	line:104
frame1	Trabalho_2.py	/^frame1 = Frame(Janela, height=100, bg="")# top frame$/;"	kind:variable	line:40
frame1	main.py	/^frame1 = Frame(Janela, height=100, bg="")$/;"	kind:variable	line:87
frame2	Trabalho_2.py	/^frame2 = Frame(Janela, width=100, bg="")# right - margem$/;"	kind:variable	line:41
frame2	main.py	/^frame2 = Frame(Janela, width=100, bg="")$/;"	kind:variable	line:88
frame3	Trabalho_2.py	/^frame3 = Frame(Janela, height=100, bg="")# middle frame - contém 2 frames (frame 5 e frame 6)$/;"	kind:variable	line:42
frame3	main.py	/^frame3 = Frame(Janela, height=100, bg="")$/;"	kind:variable	line:89
frame4	Trabalho_2.py	/^frame4 = Frame(Janela, width=100, bg="")# left frame - margem$/;"	kind:variable	line:43
frame4	main.py	/^frame4 = Frame(Janela, width=100, bg="")  # frame externo delimitador principal$/;"	kind:variable	line:90
frame5	Trabalho_2.py	/^frame5 = Frame(frame3, height=70, bg="")# main frame - contém os widgets$/;"	kind:variable	line:45
frame5	main.py	/^frame5 = Frame(frame3, height=70, bg="")  # frame5 interno (principal mesmo)$/;"	kind:variable	line:92
frame6	Trabalho_2.py	/^frame6 = Frame(frame3, height=70, bg="")# image frame - contém a imagem$/;"	kind:variable	line:46
frame6	main.py	/^frame6 = Frame(frame3, height=70, bg="")  # frame6 imagem$/;"	kind:variable	line:93
getAlfabeto	automato.py	/^    def getAlfabeto(self):$/;"	kind:member	line:32
getEstadoInicial	automato.py	/^    def getEstadoInicial(self):$/;"	kind:member	line:42
getEstados	automato.py	/^    def getEstados(self):$/;"	kind:member	line:35
getEstadosFinais	automato.py	/^    def getEstadosFinais(self):$/;"	kind:member	line:45
getTransicoes	automato.py	/^    def getTransicoes(self):$/;"	kind:member	line:38
image	Trabalho_2.py	/^image = Image.open("content1.png")$/;"	kind:variable	line:69
image	main.py	/^image = Image.open("cinema.png")$/;"	kind:variable	line:118
lb1	Trabalho_2.py	/^lb1 = Label(frame1, text='UNIVERSIDADE FEDERAL DO TOCANTINS \\n Ciência da Computação',$/;"	kind:variable	line:59
lb1	Trabalho_2.py	/^lb1 = Label(frame5, text="Informe expressão regular: ", font=fonte1)$/;"	kind:variable	line:64
lb1	main.py	/^lb1 = Label(frame1, text='UNIVERSIDADE FEDERAL DO TOCANTINS \\n Ciência da Computação',$/;"	kind:variable	line:106
lb1	main.py	/^lb1 = Label(frame5, text="Infixa: ", font=fonte1)$/;"	kind:variable	line:111
lb2	main.py	/^lb2 = Label(frame5, text="Posfixa: ", font=fonte1)$/;"	kind:variable	line:112
lb3	Trabalho_2.py	/^lb3 = Label(frame6, image=photo, bg="white")$/;"	kind:variable	line:71
lb3	main.py	/^lb3 = Label(frame6, image=photo, bg="white")$/;"	kind:variable	line:120
main	Trabalho_2.py	/^import main$/;"	kind:namespace	line:19
main.py	main.py	1;"	kind:file	line:1
messagebox	Trabalho_2.py	/^from tkinter import messagebox$/;"	kind:namespace	line:16
messagebox	automato.py	/^from tkinter import messagebox$/;"	kind:namespace	line:13
messagebox	main.py	/^from tkinter import messagebox$/;"	kind:namespace	line:16
photo	Trabalho_2.py	/^photo = ImageTk.PhotoImage(image)$/;"	kind:variable	line:70
photo	main.py	/^photo = ImageTk.PhotoImage(image)$/;"	kind:variable	line:119
pilha	main.py	/^    pilha = []# instancia uma lista vazia$/;"	kind:variable	line:36
setAlfabeto	automato.py	/^    def setAlfabeto(self,alfabeto):$/;"	kind:member	line:48
setEstadoInicial	automato.py	/^    def setEstadoInicial(self,estadoInicial):$/;"	kind:member	line:58
setEstados	automato.py	/^    def setEstados(self,estados):$/;"	kind:member	line:51
setEstadosFinais	automato.py	/^    def setEstadosFinais(self,estadosFinais):$/;"	kind:member	line:61
setTransicoes	automato.py	/^    def setTransicoes(self,transicoes):$/;"	kind:member	line:54
string	Trabalho_2.py	/^import string$/;"	kind:namespace	line:11
string	automato.py	/^import string$/;"	kind:namespace	line:10
string	main.py	/^import string$/;"	kind:namespace	line:11
sys	Trabalho_2.py	/^import sys$/;"	kind:namespace	line:15
sys	automato.py	/^import sys$/;"	kind:namespace	line:12
sys	main.py	/^import sys$/;"	kind:namespace	line:15
tk	Trabalho_2.py	/^import tkinter as tk$/;"	kind:namespace	line:10
tk	main.py	/^import tkinter as tk$/;"	kind:namespace	line:10
ttk	Trabalho_2.py	/^from tkinter import ttk$/;"	kind:namespace	line:17
ttk	main.py	/^from tkinter import ttk$/;"	kind:namespace	line:17
uniao	main.py	/^    def uniao(simboloA, simboloB):$/;"	kind:member	line:49
